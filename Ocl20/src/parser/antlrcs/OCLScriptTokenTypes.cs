// $ANTLR 2.7.7 (20060930): "OCLSCRIPT.G" -> "OCLScriptParser.cs"$

	using System.Collections.Generic;
	using Ocl20.parser.controller;
	using Ocl20.parser.cst.context;
	using Ocl20.parser.cst.expression;
	using Ocl20.parser.cst.literalExp;
	using Ocl20.parser.cst.name;
	using Ocl20.parser.cst.type;

namespace Ocl20.parser.antlrcs
{
	public class OCLScriptTokenTypes
	{
		public const int EOF = 1;
		public const int NULL_TREE_LOOKAHEAD = 3;
		public const int KEYW_PACKAGE = 4;
		public const int KEYW_ENDPACKAGE = 5;
		public const int KEYW_CONTEXT = 6;
		public const int COLON = 7;
		public const int KEYW_INIT = 8;
		public const int KEYW_DERIVE = 9;
		public const int KEYW_INV = 10;
		public const int KEYW_DEF = 11;
		public const int OP_EQUAL = 12;
		public const int KEYW_PRE = 13;
		public const int KEYW_POST = 14;
		public const int KEYW_BODY = 15;
		public const int LEFT_PAR = 16;
		public const int RIGHT_PAR = 17;
		public const int COMMA = 18;
		public const int KEYW_LET = 19;
		public const int KEYW_IN = 20;
		public const int OP_ARROW = 21;
		public const int KEYW_ITERATE = 22;
		public const int KEYW_IMPLIES = 23;
		public const int KEYW_AND = 24;
		public const int KEYW_OR = 25;
		public const int KEYW_XOR = 26;
		public const int OP_LESS_THAN = 27;
		public const int OP_GREATER_THAN = 28;
		public const int OP_LESS_OR_EQ = 29;
		public const int OP_GREATER_OR_EQ = 30;
		public const int OP_NOTEQUAL = 31;
		public const int OP_PLUS = 32;
		public const int OP_MINUS = 33;
		public const int OP_MULTIPLY = 34;
		public const int OP_DIVIDE = 35;
		public const int KEYW_NOT = 36;
		public const int KEYW_IF = 37;
		public const int KEYW_THEN = 38;
		public const int KEYW_ELSE = 39;
		public const int KEYW_ENDIF = 40;
		public const int OP_DOT = 41;
		public const int LEFT_BRACKET = 42;
		public const int RIGHT_BRACKET = 43;
		public const int AT = 44;
		public const int VERT_BAR = 45;
		public const int SEMI_COLON = 46;
		public const int KEYW_EXISTS = 47;
		public const int KEYW_FORALL = 48;
		public const int KEYW_ISUNIQUE = 49;
		public const int KEYW_ANY = 50;
		public const int KEYW_ONE = 51;
		public const int KEYW_COLLECT = 52;
		public const int KEYW_SELECT = 53;
		public const int KEYW_REJECT = 54;
		public const int KEYW_COLLECTNESTED = 55;
		public const int KEYW_SORTEDBY = 56;
		public const int INT_NUMBER = 57;
		public const int REAL_NUMBER = 58;
		public const int STRING = 59;
		public const int KEYW_TRUE = 60;
		public const int KEYW_FALSE = 61;
		public const int KEYW_NULL = 62;
		public const int KEYW_INVALID = 63;
		public const int LEFT_BRACE = 64;
		public const int RIGHT_BRACE = 65;
		public const int RANGE = 66;
		public const int KEYW_TUPLE = 67;
		public const int KEYW_SET = 68;
		public const int KEYW_BAG = 69;
		public const int KEYW_SEQUENCE = 70;
		public const int KEYW_ORDEREDSET = 71;
		public const int KEYW_COLLECTION = 72;
		public const int IDENT = 73;
		public const int OP_DOUBLE_COLON = 74;
		public const int KEYW_ATTR = 75;
		public const int KEYW_OPER = 76;
		public const int KEYW_ACTIONBODY = 77;
		public const int KEYW_UNDEFINED = 78;
		public const int KEYW_GOTO = 79;
		public const int KEYW_RETURN = 80;
		public const int KEYW_DELETE = 81;
		public const int KEYW_BEGIN = 82;
		public const int KEYW_END = 83;
		public const int KEYW_DO = 84;
		public const int KEYW_DOIF = 85;
		public const int KEYW_REPEAT = 86;
		public const int KEYW_WHILE = 87;
		public const int KEYW_UNTIL = 88;
		public const int KEYW_TO = 89;
		public const int KEYW_DOWNTO = 90;
		public const int KEYW_FOR = 91;
		public const int KEYW_FOREACH = 92;
		public const int KEYW_RAISE = 93;
		public const int KEYW_CREATE = 94;
		public const int KEYW_VAR = 95;
		public const int KEYW_CONST = 96;
		public const int KEYW_BREAK = 97;
		public const int KEYW_CONTINUE = 98;
		public const int KEYW_STEP = 99;
		public const int KEYW_MODIFIABLE = 100;
		public const int KEYW_LINKS = 101;
		public const int OP_DBL_MESSAGE = 102;
		public const int OP_MESSAGE = 103;
		public const int OP_QUOTATION = 104;
		public const int CHANNEL = 105;
		public const int APOSTROPH = 106;
		public const int OP_ASSIGNMENT = 107;
		public const int WHITE_SPACE = 108;
		public const int SINGLE_LINE_COMMENT = 109;
		public const int MULTI_LINE_COMMENT = 110;
		public const int RANGE_OR_INT = 111;
		public const int LF = 112;
		public const int CR = 113;
		public const int CRLF = 114;
		public const int NEW_LINE = 115;
		public const int TAB = 116;
		public const int BLANK = 117;
		public const int NEW_PAGE = 118;
		public const int UNDERSCORE = 119;
		public const int DIGIT = 120;
		public const int NUMBER = 121;
		public const int BETWEEN_ZERO_AND_THREE = 122;
		public const int BETWEEN_FOUR_AND_SEVEN = 123;
		public const int OCTAL_DIGIT = 124;
		public const int HEXA_DIGIT = 125;
		public const int TWO_DIGIT_OCTAL_NUMBER = 126;
		public const int THREE_DIGIT_OCTAL_NUMBER = 127;
		public const int HEXA_NUMBER = 128;
		public const int OCTAL_ESCAPE = 129;
		public const int HEXA_ESCAPE = 130;
		public const int SIMPLE_ESCAPE = 131;
		public const int ESCAPE_SEQUENCE = 132;
		public const int UPPER_CHAR = 133;
		public const int LOWER_CHAR = 134;
		public const int LETTER = 135;
		public const int ANY_CHAR = 136;
		public const int ANY_ELEMENT = 137;
		public const int COMMENT_INIT = 138;
		public const int REST_OF_LINE = 139;
		
	}
}
